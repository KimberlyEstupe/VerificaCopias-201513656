
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sun Sep 05 21:49:43 CST 2021
//----------------------------------------------------

package Analizafca;

import Analizadores.*;
import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java.util.List;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sun Sep 05 21:49:43 CST 2021
  */
public class Sintacfca extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintacfca() {super();}

  /** Constructor which sets the default scanner. */
  public Sintacfca(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintacfca(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\067\000\002\002\004\000\002\002\005\000\002\002" +
    "\006\000\002\002\004\000\002\003\004\000\002\003\003" +
    "\000\002\004\005\000\002\004\005\000\002\004\005\000" +
    "\002\004\005\000\002\004\006\000\002\004\006\000\002" +
    "\004\006\000\002\004\004\000\002\005\004\000\002\005" +
    "\003\000\002\006\007\000\002\006\007\000\002\006\007" +
    "\000\002\006\004\000\002\011\004\000\002\011\003\000" +
    "\002\015\006\000\002\015\006\000\002\015\007\000\002" +
    "\015\010\000\002\015\007\000\002\015\010\000\002\015" +
    "\006\000\002\015\006\000\002\015\006\000\002\015\006" +
    "\000\002\015\004\000\002\012\005\000\002\012\005\000" +
    "\002\012\003\000\002\012\003\000\002\014\004\000\002" +
    "\014\003\000\002\013\003\000\002\013\003\000\002\013" +
    "\003\000\002\013\004\000\002\013\004\000\002\013\004" +
    "\000\002\010\005\000\002\010\007\000\002\007\004\000" +
    "\002\007\005\000\002\017\004\000\002\017\003\000\002" +
    "\016\006\000\002\016\006\000\002\016\006\000\002\016" +
    "\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\174\000\006\003\004\041\006\001\002\000\004\024" +
    "\176\001\002\000\004\002\175\001\002\000\004\023\007" +
    "\001\002\000\016\003\013\004\017\005\016\006\012\007" +
    "\014\024\010\001\002\000\004\002\000\001\002\000\004" +
    "\024\174\001\002\000\004\023\152\001\002\000\004\024" +
    "\151\001\002\000\004\023\147\001\002\000\016\003\013" +
    "\004\017\005\016\006\012\007\014\024\ufffc\001\002\000" +
    "\004\023\055\001\002\000\004\023\020\001\002\000\012" +
    "\003\026\011\024\012\023\024\021\001\002\000\016\003" +
    "\ufffb\004\ufffb\005\ufffb\006\ufffb\007\ufffb\024\ufffb\001\002" +
    "\000\012\003\026\011\024\012\023\024\ufff2\001\002\000" +
    "\004\037\035\001\002\000\004\037\031\001\002\000\004" +
    "\024\030\001\002\000\004\031\027\001\002\000\012\003" +
    "\uffee\011\uffee\012\uffee\024\uffee\001\002\000\016\003\ufff7" +
    "\004\ufff7\005\ufff7\006\ufff7\007\ufff7\024\ufff7\001\002\000" +
    "\004\027\032\001\002\000\004\035\033\001\002\000\004" +
    "\031\034\001\002\000\012\003\ufff1\011\ufff1\012\ufff1\024" +
    "\ufff1\001\002\000\004\027\036\001\002\000\006\030\041" +
    "\036\037\001\002\000\004\031\053\001\002\000\004\031" +
    "\052\001\002\000\004\023\042\001\002\000\006\024\043" +
    "\037\044\001\002\000\016\026\uffd4\030\uffd4\031\uffd4\033" +
    "\uffd4\035\uffd4\037\uffd4\001\002\000\004\033\045\001\002" +
    "\000\004\035\050\001\002\000\004\024\047\001\002\000" +
    "\016\026\uffd3\030\uffd3\031\uffd3\033\uffd3\035\uffd3\037\uffd3" +
    "\001\002\000\006\024\uffd2\033\045\001\002\000\004\024" +
    "\uffd1\001\002\000\012\003\uffef\011\uffef\012\uffef\024\uffef" +
    "\001\002\000\012\003\ufff0\011\ufff0\012\ufff0\024\ufff0\001" +
    "\002\000\004\024\ufff3\001\002\000\020\003\065\013\056" +
    "\014\063\015\064\016\060\017\057\024\061\001\002\000" +
    "\004\034\131\001\002\000\004\034\124\001\002\000\004" +
    "\034\117\001\002\000\016\003\ufffa\004\ufffa\005\ufffa\006" +
    "\ufffa\007\ufffa\024\ufffa\001\002\000\020\003\065\013\056" +
    "\014\063\015\064\016\060\017\057\024\uffec\001\002\000" +
    "\004\034\111\001\002\000\004\034\071\001\002\000\004" +
    "\031\070\001\002\000\004\024\067\001\002\000\016\003" +
    "\ufff6\004\ufff6\005\ufff6\006\ufff6\007\ufff6\024\ufff6\001\002" +
    "\000\020\003\uffe1\013\uffe1\014\uffe1\015\uffe1\016\uffe1\017" +
    "\uffe1\024\uffe1\001\002\000\004\025\072\001\002\000\014" +
    "\026\100\030\041\033\074\035\101\037\077\001\002\000" +
    "\014\026\uffd8\030\uffd8\033\uffd8\035\uffd8\037\uffd8\001\002" +
    "\000\010\030\041\035\110\037\107\001\002\000\004\026" +
    "\104\001\002\000\014\026\uffdb\030\041\033\074\035\101" +
    "\037\077\001\002\000\014\026\uffda\030\uffda\033\uffda\035" +
    "\uffda\037\uffda\001\002\000\004\031\102\001\002\000\014" +
    "\026\uffd9\030\uffd9\033\uffd9\035\uffd9\037\uffd9\001\002\000" +
    "\020\003\uffe7\013\uffe7\014\uffe7\015\uffe7\016\uffe7\017\uffe7" +
    "\024\uffe7\001\002\000\004\026\uffdc\001\002\000\004\031" +
    "\105\001\002\000\020\003\uffe6\013\uffe6\014\uffe6\015\uffe6" +
    "\016\uffe6\017\uffe6\024\uffe6\001\002\000\014\026\uffd5\030" +
    "\uffd5\033\uffd5\035\uffd5\037\uffd5\001\002\000\014\026\uffd7" +
    "\030\uffd7\033\uffd7\035\uffd7\037\uffd7\001\002\000\014\026" +
    "\uffd6\030\uffd6\033\uffd6\035\uffd6\037\uffd6\001\002\000\006" +
    "\035\113\037\112\001\002\000\004\031\115\001\002\000" +
    "\004\031\114\001\002\000\020\003\uffeb\013\uffeb\014\uffeb" +
    "\015\uffeb\016\uffeb\017\uffeb\024\uffeb\001\002\000\020\003" +
    "\uffea\013\uffea\014\uffea\015\uffea\016\uffea\017\uffea\024\uffea" +
    "\001\002\000\004\024\uffed\001\002\000\006\035\121\037" +
    "\120\001\002\000\004\031\123\001\002\000\004\031\122" +
    "\001\002\000\020\003\uffe5\013\uffe5\014\uffe5\015\uffe5\016" +
    "\uffe5\017\uffe5\024\uffe5\001\002\000\020\003\uffe4\013\uffe4" +
    "\014\uffe4\015\uffe4\016\uffe4\017\uffe4\024\uffe4\001\002\000" +
    "\006\035\126\037\125\001\002\000\004\031\130\001\002" +
    "\000\004\031\127\001\002\000\020\003\uffe3\013\uffe3\014" +
    "\uffe3\015\uffe3\016\uffe3\017\uffe3\024\uffe3\001\002\000\020" +
    "\003\uffe2\013\uffe2\014\uffe2\015\uffe2\016\uffe2\017\uffe2\024" +
    "\uffe2\001\002\000\004\025\132\001\002\000\010\026\135" +
    "\035\136\037\134\001\002\000\004\026\144\001\002\000" +
    "\006\026\uffde\033\142\001\002\000\004\031\141\001\002" +
    "\000\006\026\uffdd\033\137\001\002\000\006\035\136\037" +
    "\134\001\002\000\004\026\uffdf\001\002\000\020\003\uffe9" +
    "\013\uffe9\014\uffe9\015\uffe9\016\uffe9\017\uffe9\024\uffe9\001" +
    "\002\000\006\035\136\037\134\001\002\000\004\026\uffe0" +
    "\001\002\000\004\031\145\001\002\000\020\003\uffe8\013" +
    "\uffe8\014\uffe8\015\uffe8\016\uffe8\017\uffe8\024\uffe8\001\002" +
    "\000\004\024\ufffd\001\002\000\004\024\150\001\002\000" +
    "\016\003\ufff8\004\ufff8\005\ufff8\006\ufff8\007\ufff8\024\ufff8" +
    "\001\002\000\016\003\ufff4\004\ufff4\005\ufff4\006\ufff4\007" +
    "\ufff4\024\ufff4\001\002\000\010\014\154\020\155\024\153" +
    "\001\002\000\016\003\ufff9\004\ufff9\005\ufff9\006\ufff9\007" +
    "\ufff9\024\ufff9\001\002\000\004\034\167\001\002\000\004" +
    "\034\162\001\002\000\004\024\161\001\002\000\010\014" +
    "\154\020\155\024\uffcf\001\002\000\004\024\uffd0\001\002" +
    "\000\016\003\ufff5\004\ufff5\005\ufff5\006\ufff5\007\ufff5\024" +
    "\ufff5\001\002\000\006\035\164\037\163\001\002\000\004" +
    "\031\166\001\002\000\004\031\165\001\002\000\010\014" +
    "\uffcc\020\uffcc\024\uffcc\001\002\000\010\014\uffcb\020\uffcb" +
    "\024\uffcb\001\002\000\006\035\171\037\170\001\002\000" +
    "\004\031\173\001\002\000\004\031\172\001\002\000\010" +
    "\014\uffce\020\uffce\024\uffce\001\002\000\010\014\uffcd\020" +
    "\uffcd\024\uffcd\001\002\000\004\002\uffff\001\002\000\004" +
    "\002\001\001\002\000\004\002\ufffe\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\174\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\003\010\004\014" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\003\145" +
    "\004\014\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\005\024\006\021\001\001\000\002\001\001\000\006" +
    "\005\053\006\021\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\037\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\045\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\050\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\011\065\015\061\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\011" +
    "\115\015\061\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\010\072\013\075" +
    "\014\074\001\001\000\002\001\001\000\004\010\105\001" +
    "\001\000\002\001\001\000\010\010\072\013\075\014\102" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\012\132\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\012\137\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\012\142\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\016\156\017\155\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\016\156" +
    "\017\157\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintacfca$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintacfca$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintacfca$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    public void syntax_error(Symbol s){
        this.s = s;
        int linea = s.right+1;
        int columna = s.left;
        String encontrado = s.value.toString();

        System.out.println(encontrado);
        FVentanaP.AddES(encontrado, "Sintactico", "archivo",linea,columna);//Lista de Reporte
    }

    public Symbol getS(){
        return this.s;
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
        System.out.println("MODO PANICO");

        int linea = s.right;
        int columna = s.left;
        String encontrado = s.value.toString();
        FVentanaP.AddES(encontrado, "Sintactico Panico", "archivo",linea,columna);
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintacfca$actions {
  private final Sintacfca parser;

  /** Constructor */
  CUP$Sintacfca$actions(Sintacfca parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintacfca$do_action(
    int                        CUP$Sintacfca$act_num,
    java_cup.runtime.lr_parser CUP$Sintacfca$parser,
    java.util.Stack            CUP$Sintacfca$stack,
    int                        CUP$Sintacfca$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintacfca$result;

      /* select the action based on the action number */
      switch (CUP$Sintacfca$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // DLINEA ::= Archivo DPuntos Identificador PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DLINEA",12, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // DLINEA ::= Archivo DPuntos Cadena PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DLINEA",12, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // DLINEA ::= Titulo DPuntos Identificador PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DLINEA",12, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // DLINEA ::= Titulo DPuntos Cadena PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DLINEA",12, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // DLINEAS ::= DLINEA 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DLINEAS",13, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // DLINEAS ::= DLINEA DLINEAS 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DLINEAS",13, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // VARIABLEBARRA ::= Coma Cadena VARIABLEBARRA 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VARIABLEBARRA",5, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-2)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // VARIABLEBARRA ::= Coma Cadena 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VARIABLEBARRA",5, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // TIPOBARRA ::= Dolar LlaveA Identificador VARIABLEBARRA LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("TIPOBARRA",6, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-4)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // TIPOBARRA ::= Dolar LlaveA LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("TIPOBARRA",6, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-2)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // VALOREE ::= Coma TIPOBARRA 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VALOREE",9, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // VALOREE ::= Coma Cadena 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VALOREE",9, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // VALOREE ::= Coma Identificador 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VALOREE",9, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // VALOREE ::= TIPOBARRA 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VALOREE",9, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // VALOREE ::= Cadena 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VALOREE",9, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // VALOREE ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VALOREE",9, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // VALOREES ::= VALOREE 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VALOREES",10, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // VALOREES ::= VALOREE VALOREES 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("VALOREES",10, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // EJESX ::= Cadena 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("EJESX",8, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // EJESX ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("EJESX",8, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // EJESX ::= Cadena Coma EJESX 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("EJESX",8, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-2)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // EJESX ::= Identificador Coma EJESX 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("EJESX",8, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-2)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // DBARRA ::= error PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // DBARRA ::= TituloY DPuntos Identificador PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // DBARRA ::= TituloY DPuntos Cadena PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // DBARRA ::= TituloX DPuntos Identificador PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // DBARRA ::= TituloX DPuntos Cadena PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // DBARRA ::= Valores DPuntos CorcheA VALOREES CorcheC PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-5)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // DBARRA ::= Valores DPuntos CorcheA CorcheC PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-4)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // DBARRA ::= EjeX DPuntos CorcheA EJESX CorcheC PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-5)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // DBARRA ::= EjeX DPuntos CorcheA CorcheC PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-4)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // DBARRA ::= Titulo DPuntos Identificador PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // DBARRA ::= Titulo DPuntos Cadena PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRA",11, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // DBARRAS ::= DBARRA 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRAS",7, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // DBARRAS ::= DBARRA DBARRAS 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DBARRAS",7, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // DGLOBALE ::= error PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DGLOBALE",4, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // DGLOBALE ::= Double Identificador Igual TIPOBARRA PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DGLOBALE",4, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-4)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // DGLOBALE ::= Double Identificador Igual Numero PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DGLOBALE",4, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-4)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // DGLOBALE ::= String Identificador Igual Cadena PComa 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DGLOBALE",4, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-4)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // DGLOBALES ::= DGLOBALE 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DGLOBALES",3, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // DGLOBALES ::= DGLOBALE DGLOBALES 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("DGLOBALES",3, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // INSESTADISTICO ::= error LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICO",2, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // INSESTADISTICO ::= GLineas LlaveA DLINEAS LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICO",2, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // INSESTADISTICO ::= GBarras LlaveA DBARRAS LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICO",2, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // INSESTADISTICO ::= Globales LlaveA DGLOBALES LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICO",2, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // INSESTADISTICO ::= GPie LlaveA LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICO",2, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-2)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // INSESTADISTICO ::= GLineas LlaveA LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICO",2, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-2)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INSESTADISTICO ::= GBarras LlaveA LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICO",2, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-2)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // INSESTADISTICO ::= Globales LlaveA LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICO",2, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-2)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // INSESTADISTICOS ::= INSESTADISTICO 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICOS",1, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INSESTADISTICOS ::= INSESTADISTICO INSESTADISTICOS 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INSESTADISTICOS",1, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= error LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= REstadisticos LlaveA INSESTADISTICOS LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-3)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= REstadisticos LlaveA LlaveC 
            {
              Object RESULT =null;

              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-2)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          return CUP$Sintacfca$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)).value;
		RESULT = start_val;
              CUP$Sintacfca$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.elementAt(CUP$Sintacfca$top-1)), ((java_cup.runtime.Symbol)CUP$Sintacfca$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintacfca$parser.done_parsing();
          return CUP$Sintacfca$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

